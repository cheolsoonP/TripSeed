name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request: 
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
          
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Make application.properties
        run: |
          touch back/enjoytrip/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" >> back/enjoytrip/src/main/resources/application.properties

        shell: bash 

        
      - name: Build with Maven
        run: |
          cd back/enjoytrip
          mvn -B package --file ./pom.xml


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ secrets.ECR_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com

    
      - name: Build Docker Image
        run: |
          cd back/enjoytrip
          docker build -t tripseed-api .

      - name: Tag Docker Image
        run: docker tag tripseed-api:latest ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.ECR_NAME }}:latest

      - name: Push Docker Image to ECR
        run: docker push ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.ECR_NAME }}:latest


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EC2_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EC2_REGION }}

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into EC2 and execute commands
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              docker stop ${{ secrets.CONTAINER_NAME}}
              docker rm ${{ secrets.CONTAINER_NAME}}
              # ECR에서 도커파일 가져오기
              aws ecr get-login-password --region ${{ secrets.ECR_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com
              docker pull ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.ECR_NAME }}
              # 도커파일 실행
              docker run -d --name ${{ secrets.CONTAINER_NAME}} -p ${{ secrets.HOST_PORT }}:${{ secrets.CONTAINER_PORT }} 
                ${{ secrets.ECR_USER }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.ECR_NAME }}:latest


