<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssafy.enjoytrip.board.mapper.BoardMapper">
	
	<resultMap type="boardDto" id="post">
		<result column="post_id" property="postId" />
		<result column="title" property="title" />
		<result column="writer_id" property="writerId" />
		<result column="writer_nickname" property="writerNickname" />
		<result column="content" property="content" />
		<result column="like_count" property="likeCount" />
		<result column="view_count" property="viewCount" />
		<result column="reply_count" property="replyCount" />
		<result column="write_date" property="writeDate" />
		<result column="update_date" property="updateDate" />
		<result column="sido_code" property="sidoCode" />
		<result column="gugun_code" property="gugunCode" />
		<result column="sido_name" property="sidoName" />
		<result column="gugun_name" property="gugunName" />
		<result column="image" property="image" />
	</resultMap>
	
	<resultMap type="replyDto" id="reply">
		<result column="reply_id" property="replyId"/>
		<result column="post_id" property="postId"/>
		<result column="writer_id" property="writerId"/>
		<result column="reply_content" property="replyContent"/>
		<result column="write_date" property="writeDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="user_nickname" property="userNickname"/>
	</resultMap>
	
	<insert id="writePost" parameterType="boardDto">
		insert into tour_info_board
			(title, writer_id, writer_nickname, content, sido_code, gugun_code, image)
			values (#{title}, #{writerId}, #{writerNickname}, #{content}, #{sidoCode}, #{gugunCode}, #{image})
	</insert>
	
	<select id="getPostList" parameterType="hashMap" resultMap="post">
		select b.*, sg.sido_name, sg.gugun_name
		from tour_info_board b
		left join(
			select s.sido_code, s.sido_name, g.gugun_code, g.gugun_name
			from  sido s join gugun g on s.sido_code = g.sido_code
		) sg
		on sg.sido_code = b.sido_code and sg.gugun_code = b.gugun_code
		<trim prefix="where" suffixOverrides="and">
			<if test="sidoCode != null">b.sido_code=#{sidoCode} and</if>
			<if test="gugunCode != null">b.gugun_code=#{gugunCode} and</if>
			<if test="keyword != null">b.title like concat('%', #{keyword}, '%') or</if>
			<if test="keyword != null">b.content like concat('%', #{keyword}, '%')</if>		
		</trim>
		order by b.post_id DESC
	</select>

	<select id="getUserPostList" parameterType="string" resultMap="post">
		select b.*, sg.sido_name, sg.gugun_name
		from tour_info_board b
		left join(
			select s.sido_code, s.sido_name, g.gugun_code, g.gugun_name
			from  sido s join gugun g on s.sido_code = g.sido_code
		) sg
		on sg.sido_code = b.sido_code and sg.gugun_code = b.gugun_code
		where b.writer_id = #{userId}
		order by b.post_id DESC
	</select>
	
	<select id="getPost" parameterType="string" resultMap="post">
		select b.*, sg.sido_name, sg.gugun_name
		from tour_info_board b
		left join(
			select s.sido_code, s.sido_name, g.gugun_code, g.gugun_name
			from  sido s join gugun g on s.sido_code = g.sido_code
		) sg
		on sg.sido_code = b.sido_code and sg.gugun_code = b.gugun_code
		where b.post_id = #{postId}
	</select>
	
	<update id="updatePost" parameterType="boardDto">
		update tour_info_board
		set title = #{title},
			content = #{content},
			<if test="sidoCode != null">sido_code=#{sidoCode},</if>
			<if test="gugunCode != null">gugun_code=#{gugunCode},</if>			
			update_date = CURRENT_TIMESTAMP
		where post_id = #{postId}
	</update>

	<update id="addView" parameterType="string">
		update tour_info_board
		set view_count = view_count+1
		where post_id = #{postId}
	</update>
	
	<delete id="deletePost" parameterType="string">
		delete from tour_info_board
		where post_id = #{postId}
	</delete>


	<!-- 댓글 -->
	<insert id="writeReply" parameterType="replyDto">
		insert into reply
	    	(post_id, writer_id, reply_content)
    	values (#{postId}, #{writerId}, #{replyContent});
	</insert>
	
	<select id="getReplyList" parameterType="string" resultMap="reply">
		select r.*, u.user_nickname
		from reply r join user u
        on r.writer_id = u.user_id
		where post_id = #{postId};
	</select>
	
	<update id="updateReply" parameterType="replyDto">
		update reply
		set reply_content = #{replyContent},
			update_date = CURRENT_TIMESTAMP
		where reply_id = #{replyId}
	</update>
	
	<delete id="deleteReply" parameterType="string">
		delete from reply
		where reply_id = #{replyId}
	</delete>

</mapper>